<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                      http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>com.rccl.middleware</groupId>
  <artifactId>ssh-eda-kafkacouch-consumers</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <repositories>

    <repository>
      <id>confluent</id>
      <url>http://packages.confluent.io/maven/</url>
    </repository>

    <repository>
      <id>microservices-release</id>
      <name>Microservices Release Repository</name>
      <url>https://dev1.mesos.rccl.com/nexus/repository/microservices-release</url>
      <releases>
        <enabled>true</enabled>
        <updatePolicy>never</updatePolicy>
        <checksumPolicy>warn</checksumPolicy>
      </releases>
      <snapshots>
        <enabled>false</enabled>
        <updatePolicy>always</updatePolicy>
        <checksumPolicy>fail</checksumPolicy>
      </snapshots>
    </repository>

    <repository>
      <id>microservices-snapshot</id>
      <name>Microservices Snapshot Repository</name>
      <url>https://dev1.mesos.rccl.com/nexus/repository/microservices-snapshot</url>
      <releases>
        <enabled>false</enabled>
        <updatePolicy>never</updatePolicy>
        <checksumPolicy>warn</checksumPolicy>
      </releases>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>always</updatePolicy>
        <checksumPolicy>fail</checksumPolicy>
      </snapshots>
    </repository>
    <repository>
      <id>lightbend-commercial</id>
      <name>Lightbend Commercial Mirror</name>
      <url>https://dev1.mesos.rccl.com/nexus/repository/lightbendproxy/</url>
      <releases>
        <enabled>true</enabled>
        <updatePolicy>never</updatePolicy>
        <checksumPolicy>warn</checksumPolicy>
      </releases>
      <snapshots>
        <enabled>false</enabled>
        <updatePolicy>always</updatePolicy>
        <checksumPolicy>fail</checksumPolicy>
      </snapshots>
    </repository>

  </repositories>

  <organization>
    <name>RCCL</name>
    <url>http://rcl.com</url>
  </organization>
  <description>
    Purge E2K Data based on input Deletes View
  </description>

  <pluginRepositories>

    <pluginRepository>
      <id>mesosphere-mirror</id>
      <name>Mesosphere Repository Mirror</name>
      <url>http://downloads.mesosphere.io/maven</url>
    </pluginRepository>

  </pluginRepositories>
  <profiles>
    <profile>
      <id>local</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <dockerHost>unix:///var/run/docker.sock</dockerHost>
        <dockerRegistryCertPath>/Users/114934/.docker/aws_dev_test.crt</dockerRegistryCertPath>
        <dockerRegistryURI>rhldcmesboot711.na.rccl.com:5000</dockerRegistryURI>
        <dcosURI>http://10.135.10.151</dcosURI>
        <dcosTokenFile>src/main/docker/dcosToken</dcosTokenFile>
        <skipDockerBuild>false</skipDockerBuild>
        <skipDockerPush>false</skipDockerPush>
        <ignoreDcosSslCertificateIssue>true</ignoreDcosSslCertificateIssue>
      </properties>
    </profile>
    <profile>
      <id>build</id>
      <properties>
        <dockerHost>unix:///var/run/docker.sock</dockerHost>
        <dockerRegistryCertPath>/Users/114934/.docker/aws_dev_test.crt</dockerRegistryCertPath>
        <dockerRegistryURI>rhldcmesboot711.na.rccl.com:5000</dockerRegistryURI>
        <dcosURI>http://10.16.7.225</dcosURI>
        <dcosTokenFile>src/main/docker/dcosToken</dcosTokenFile>
        <dockerFile>Dockerfile</dockerFile>
        <skipDockerBuild>false</skipDockerBuild>
        <skipDockerPush>false</skipDockerPush>
        <ignoreDcosSslCertificateIssue>true</ignoreDcosSslCertificateIssue>
      </properties>
    </profile>
  </profiles>

  <properties>

    <avro.version>1.8.2</avro.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <skipUTs>false</skipUTs>
    <skipITs>false</skipITs>
    <confluent.version>4.0.0</confluent.version>
    <kafka.version>2.2.0</kafka.version>
    <streams.version>2.2.0</streams.version>
    <commons.lang.version>3.0</commons.lang.version>
    <avro.version>1.8.2</avro.version>
    <skipJacocoAggregate>false</skipJacocoAggregate>
    <jacoco.execs.directory>${project.basedir}/target/jacoco</jacoco.execs.directory>
    <jacoco.ut.exec>${jacoco.execs.directory}/jacoco.exec</jacoco.ut.exec>
    <jacoco.it.exec>${jacoco.execs.directory}/jacoco-it.exec</jacoco.it.exec>
    <jacoco.aggregate.exec>${jacoco.execs.directory}/jacoco-aggregate.exec</jacoco.aggregate.exec>
    <sonar.jacoco.reportPath>${jacoco.aggregate.exec}</sonar.jacoco.reportPath>
    <dockerFile>Dockerfile</dockerFile>
    <skipUTs>false</skipUTs>
    <skipITs>false</skipITs>

    <maven.assembly.plugin.version>3.1.0</maven.assembly.plugin.version>
    <maven.checkstyle.plugin.version>2.17</maven.checkstyle.plugin.version>
    <maven.compiler.plugin.version>3.7.0</maven.compiler.plugin.version>
    <maven.docker.plugin.version>0.23.0</maven.docker.plugin.version>
    <maven.failsafe.plugin.version>2.20.1</maven.failsafe.plugin.version>
    <maven.findbugs.plugin.version>3.0.5</maven.findbugs.plugin.version>
    <maven.jacoco.plugin.version>0.7.9</maven.jacoco.plugin.version>
    <maven.javadoc.plugin.version>2.10.4</maven.javadoc.plugin.version>
    <maven.sonar.plugin.version>3.3.0.603</maven.sonar.plugin.version>
    <maven.surefire.plugin.version>2.20.1</maven.surefire.plugin.version>
    <maven.compiler.version>3.5.1</maven.compiler.version>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <apache.lang.version>3.7</apache.lang.version>
    <junit.version>4.12</junit.version>
    <lightbend.cinnamon.version>2.4.0</lightbend.cinnamon.version>
    <lombok.version>1.18.4</lombok.version>
    <middleware.common.version>1.20.1</middleware.common.version>
    <org.json.version>20160810</org.json.version>
    <jdk.version>1.8</jdk.version>
    <maven.assembly.version>2.6</maven.assembly.version>
    <data.streaming.common.version>1.11.0-SNAPSHOT</data.streaming.common.version>
  </properties>

  <distributionManagement>

    <snapshotRepository>
      <uniqueVersion>false</uniqueVersion>
      <id>microservices-nexus</id>
      <name>Microservices Snapshot Repository</name>
      <url>https://dev1.mesos.rccl.com/nexus/repository/microservices-snapshot</url>
    </snapshotRepository>

    <repository>
      <uniqueVersion>false</uniqueVersion>
      <id>microservices-nexus</id>
      <name>Microservices Release Repository</name>
      <url>https://dev1.mesos.rccl.com/nexus/repository/microservices-release</url>
    </repository>

  </distributionManagement>


  <build>

    <plugins>

      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>${maven.docker.plugin.version}</version>
        <configuration>
          <skip>false</skip>
          <logStdout>true</logStdout>
          <dockerHost>${dockerHost}</dockerHost>
          <certPath>${dockerRegistryCertPath}</certPath>
          <useColor>true</useColor>
          <images>
            <image>
              <name>${project.artifactId}</name>
              <registry>${dockerRegistryURI}</registry>
              <build>
                <dockerFile>${dockerFile}</dockerFile>
                <tags>
                  <tag>${project.version}</tag>
                </tags>
                <assembly>
                  <mode>dir</mode>
                  <descriptor>docker-bundle.xml</descriptor>
                </assembly>
              </build>
            </image>
          </images>
        </configuration>
        <executions>
          <execution>
            <id>container-build</id>
            <goals>
              <goal>build</goal>
            </goals>
          </execution>
          <execution>
            <id>container-push</id>
            <goals>
              <goal>push</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>${maven.assembly.version}</version>
        <configuration>
          <descriptor>src/assembly/standalone-bundle.xml</descriptor>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>${maven.checkstyle.plugin.version}</version>
        <configuration>
          <configLocation>checkstyle.xml</configLocation>
          <consoleOutput>true</consoleOutput>
          <failsOnError>false</failsOnError>
          <linkXRef>false</linkXRef>
          <failOnViolation>false</failOnViolation>
          <includeTestSourceDirectory>false</includeTestSourceDirectory>
          <sourceDirectory>${project.basedir}/src/main/java</sourceDirectory>
          <testSourceDirectory>src/it-test/java</testSourceDirectory>
          <outputFile>${project.basedir}/target/checkstyle-output.xml</outputFile>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>3.1.0</version>
        <configuration>
          <createDependencyReducedPom>false</createDependencyReducedPom>
        </configuration>

        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <transformers>
                <transformer
                    implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>com.rccl.middleware.ssh.KTableJoinExecutor</mainClass>
                </transformer>
              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven.compiler.plugin.version}</version>
        <configuration>
          <source>${maven.compiler.source}</source>
          <target>${maven.compiler.target}</target>
          <compilerArgs>
            <arg>-parameters</arg>
          </compilerArgs>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${maven.failsafe.plugin.version}</version>
        <executions>
          <execution>
            <id>integration-tests</id>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <argLine>@{failsafeArgLine}</argLine>
              <encoding>UTF-8</encoding>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
        <version>${maven.findbugs.plugin.version}</version>
        <configuration>
          <outputDirectory>${project.build.directory}/findbugs</outputDirectory>
          <xmlOutput>true</xmlOutput>
          <xmlOutputDirectory>target/findbugs</xmlOutputDirectory>
          <threshold>Low</threshold>
          <effort>Max</effort>
          <failOnError>false</failOnError>
          <excludeFilterFile>findbugs-exclude.xml</excludeFilterFile>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${maven.javadoc.plugin.version}</version>
        <configuration>
          <show>private</show>
          <nohelp>true</nohelp>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.sonarsource.scanner.maven</groupId>
        <artifactId>sonar-maven-plugin</artifactId>
        <version>${maven.sonar.plugin.version}</version>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven.surefire.plugin.version}</version>
        <configuration>
          <argLine>@{argLine} -Xmx2048m</argLine>
          <excludes>
            <exclude>**/it/*.java</exclude>
            <exclude>**/ft/*.java</exclude>
          </excludes>
          <forkCount>1</forkCount>
          <reuseForks>false</reuseForks>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${maven.jacoco.plugin.version}</version>
        <executions>
          <execution>
            <id>default-pre-unit-test</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <append>true</append>
              <destFile>${jacoco.ut.exec}</destFile>
              <skip>${skipUTs}</skip>
            </configuration>
          </execution>
          <execution>
            <id>default-pre-integration-test</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>prepare-agent-integration</goal>
            </goals>
            <configuration>
              <append>true</append>
              <destFile>${jacoco.it.exec}</destFile>
              <skip>${skipITs}</skip>
            </configuration>
          </execution>
          <execution>
            <id>jacoco-site</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <dataFile>${jacoco.it.exec}</dataFile>
            </configuration>
          </execution>
          <execution>
            <id>default-merge</id>
            <phase>verify</phase>
            <goals>
              <goal>merge</goal>
            </goals>
            <configuration>
              <fileSets>
                <fileSet>
                  <directory>${jacoco.execs.directory}</directory>
                  <includes>
                    <include>jacoco.exec</include>
                    <include>jacoco-it.exec</include>
                  </includes>
                </fileSet>
              </fileSets>
              <destFile>${jacoco.aggregate.exec}</destFile>
              <skip>${skipJacocoAggregate}</skip>
            </configuration>
          </execution>
          <execution>
            <id>default-report</id>
            <phase>verify</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <dataFile>${jacoco.ut.exec}</dataFile>
              <outputDirectory>${jacoco.execs.directory}/ut</outputDirectory>
              <skip>${skipUTs}</skip>
              <excludes>
                <exclude>com/rccl/middleware/ssh/processor/StreamProcessor.class</exclude>
                <exclude>com/rccl/middleware/ssh/processor/JsonDocumentHelper.class</exclude>
                <exclude>com/rccl/middleware/ssh/utils/*</exclude>
                <exclude>com/rccl/middleware/ssh/exceptions/*</exclude>
                <exclude>com/rccl/middleware/ssh/streams/StreamProcessor.class</exclude>
                <exclude>com/rccl/middleware/ssh/KTableJoinExecutor.class</exclude>
              </excludes>
            </configuration>
          </execution>
          <execution>
            <id>default-report-integration</id>
            <goals>
              <goal>report-integration</goal>
            </goals>
            <configuration>
              <dataFile>${jacoco.it.exec}</dataFile>
              <outputDirectory>${jacoco.execs.directory}/it</outputDirectory>
              <skip>${skipITs}</skip>
            </configuration>
          </execution>
          <execution>
            <id>default-report-aggregate</id>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <dataFile>${jacoco.aggregate.exec}</dataFile>
              <outputDirectory>${jacoco.execs.directory}/aggregate</outputDirectory>
              <skip>${skipJacocoAggregate}</skip>
            </configuration>
          </execution>
          <execution>
            <id>default-check</id>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <dataFile>${jacoco.ut.exec}</dataFile>
              <rules>
                <rule>
                  <element>CLASS</element>
                  <excludes>
                    <exclude>*Application</exclude>
                    <exclude>*Test</exclude>
                  </excludes>
                  <limits>
                    <limit>
                      <counter>LINE</counter>
                      <value>COVEREDRATIO</value>
                      <minimum>.0</minimum>
                    </limit>
                  </limits>
                </rule>
              </rules>
              <skip>${skipUTs}</skip>
            </configuration>
          </execution>
          <execution>
            <id>default-check-integration</id>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <dataFile>${jacoco.it.exec}</dataFile>
              <rules>
                <rule>
                  <element>CLASS</element>
                  <excludes>
                    <exclude>*Application</exclude>
                    <exclude>*Test</exclude>
                  </excludes>
                  <limits>
                    <limit>
                      <counter>LINE</counter>
                      <value>COVEREDRATIO</value>
                      <minimum>.0</minimum>
                    </limit>
                  </limits>
                </rule>
              </rules>
              <skip>${skipITs}</skip>
            </configuration>
          </execution>
          <execution>
            <id>default-check-aggregate</id>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <dataFile>${jacoco.aggregate.exec}</dataFile>
              <rules>
                <rule>
                  <element>CLASS</element>
                  <excludes>
                    <exclude>*Application</exclude>
                    <exclude>*Test</exclude>
                  </excludes>
                  <limits>
                    <limit>
                      <counter>LINE</counter>
                      <value>COVEREDRATIO</value>
                      <minimum>.0</minimum>
                    </limit>
                  </limits>
                </rule>
              </rules>
              <skip>${skipJacocoAggregate}</skip>
            </configuration>
          </execution>
        </executions>

      </plugin>

    </plugins>
  </build>

  <dependencies>

    <dependency>
      <groupId>com.datastax.cassandra</groupId>
      <artifactId>cassandra-driver-core</artifactId>
      <version>3.6.0</version>
    </dependency>

    <dependency>
      <groupId>org.cassandraunit</groupId>
      <artifactId>cassandra-unit</artifactId>
      <version>3.5.0.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.datastax.cassandra</groupId>
      <artifactId>cassandra-driver-extras</artifactId>
      <version>3.6.0</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>1.7.12</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/log4j/log4j -->
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.17</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>2.12.1</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/com.alibaba/log4j2-mtc-thread-context-map -->
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>log4j2-mtc-thread-context-map</artifactId>
      <version>1.0.1</version>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <version>1.10.19</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jmockit</groupId>
      <artifactId>jmockit</artifactId>
      <version>1.8</version>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.7</version>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.kafka</groupId>
      <artifactId>kafka-streams</artifactId>
      <version>${streams.version}</version>
    </dependency>
    <dependency>
      <groupId>io.confluent</groupId>
      <artifactId>kafka-avro-serializer</artifactId>
      <version>${confluent.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-log4j12</artifactId>
        </exclusion>
        <exclusion>
          <groupId>sl4j</groupId>
          <artifactId>sl4j</artifactId>
        </exclusion>
        <exclusion>
          <groupId>ch.qos.logback</groupId>
          <artifactId>logback-classic</artifactId>
        </exclusion>
      </exclusions>
    </dependency>


    <dependency>
      <groupId>com.rccl.middleware</groupId>
      <artifactId>data-streaming-common</artifactId>
      <version>${data.streaming.common.version}</version>
      <exclusions>
        <exclusion>
          <groupId>javax.el</groupId>
          <artifactId>javax.el-api</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.eclipse.jetty</groupId>
          <artifactId>jetty-jmx</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>com.typesafe</groupId>
      <artifactId>config</artifactId>
      <version>1.3.1</version>
    </dependency>

    <dependency>
      <groupId>org.apache.kafka</groupId>
      <artifactId>kafka_2.11</artifactId>
      <version>${kafka.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.kafka</groupId>
      <artifactId>kafka_2.11</artifactId>
      <version>${kafka.version}</version>
      <classifier>test</classifier>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.kafka</groupId>
      <artifactId>kafka-clients</artifactId>
      <version>${kafka.version}</version>
      <classifier>test</classifier>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>io.confluent</groupId>
      <artifactId>kafka-schema-registry</artifactId>
      <version>${confluent.version}</version>
      <classifier>tests</classifier>
      <exclusions>
        <exclusion>
          <groupId>org.glassfish.web</groupId>
          <artifactId>javax.el</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>io.confluent</groupId>
      <artifactId>kafka-schema-registry</artifactId>
      <version>${confluent.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.glassfish.jersey.ext</groupId>
          <artifactId>jersey-bean-validation</artifactId>
        </exclusion>
        <exclusion>
          <groupId>io.confluent</groupId>
          <artifactId>rest-utils</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.glassfish.web</groupId>
          <artifactId>javax.el</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.apache.kafka</groupId>
      <artifactId>kafka-clients</artifactId>
      <version>${kafka.version}</version>
      <classifier>test</classifier>
      <exclusions>
        <exclusion>
          <groupId>org.glassfish.jersey.ext</groupId>
          <artifactId>jersey-bean-validation</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>3.3.0</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>io.confluent</groupId>
      <artifactId>monitoring-interceptors</artifactId>
      <version>${confluent.version}</version>
    </dependency>

    <dependency>
      <groupId>com.rccl.middleware</groupId>
      <artifactId>data-streaming-common</artifactId>
      <version>${data.streaming.common.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${lombok.version}</version>
      <scope>provided</scope>
    </dependency>

  </dependencies>

</project>
